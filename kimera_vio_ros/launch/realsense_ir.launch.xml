<launch>
  <group>
    <arg name="dataset_name" default="RealSense_IR"/>
    <arg name="parallel" default="true" />
    <arg name="use_sim_time" default="false" />
    <arg name="rectified" default="false" />
    <arg name="use_lcd" default="true"/>

    <arg name="log_output" default="false"/>
    <!-- <arg name="log_output_path"
    default="$(find kimera_vio_ros)/output_logs/"
    if="$(var log_output)"/> -->

    <!-- Subscribed Topics -->
    <let name="cam_topic.left"  value="/camera/infra1/image_rect_raw"/>
    <let name="cam_topic.right" value="/camera/infra2/image_rect_raw"/>
    <let name="imu_topic"       value="/camera/imu/sample"/>

    <!-- Frame IDs for Odometry -->
    <let name="frame_id.base_link" value="base_link" />

    <!-- Launch actual pipeline -->
    <include file="$(find-pkg-share kimera_vio_ros)/launch/kimera_vio_ros.launch.xml"/>
  </group>

  <!-- Kimera assumes the imu is fundamentally the `base_link` refrence frame.
    To keep the TF tree a tree, we can just publish a static TF
    that is just the inverse of the camera_link to camera_imu_optical_frame tf.
    E.g: `$ ros2 run tf2_ros tf2_echo camera_imu_optical_frame camera_link` -->
  <node name="base_link_to_camera_link" pkg="tf2_ros" exec="static_transform_publisher"
    args="-0.006 0.005 0.012 0.500 -0.500 0.500 0.500 base_link camera_link" />

</launch>
